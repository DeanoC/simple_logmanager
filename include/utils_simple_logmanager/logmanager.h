#pragma once
#ifndef UTILS_SIMPLE_LOGMANAGER_LOGMANAGER_H
#define UTILS_SIMPLE_LOGMANAGER_LOGMANAGER_H

#include "al2o3_platform/platform.h"
typedef void* SimpleLogManager_Handle;

AL2O3_EXTERN_C SimpleLogManager_Handle SimpleLogManager_Alloc();
AL2O3_EXTERN_C void SimpleLogManager_Free(SimpleLogManager_Handle handle);

AL2O3_EXTERN_C void SimpleLogManager_UseFileForLog(SimpleLogManager_Handle handle, char const* fileName);
AL2O3_EXTERN_C void SimpleLogManager_CloseLogFile(SimpleLogManager_Handle handle);
AL2O3_EXTERN_C void SimpleLogManager_SetRecordTimeStamp(SimpleLogManager_Handle handle, bool enable);
AL2O3_EXTERN_C bool SimpleLogManager_GetRecordTimeStamp(SimpleLogManager_Handle handle);

AL2O3_EXTERN_C void SimpleLogManager_SetFileLineQuiet(SimpleLogManager_Handle handle, bool quiet);
AL2O3_EXTERN_C bool SimpleLogManager_IsFileLineQuiet(SimpleLogManager_Handle handle);

AL2O3_EXTERN_C void SimpleLogManager_SetInfoQuiet(SimpleLogManager_Handle handle, bool quiet);
AL2O3_EXTERN_C void SimpleLogManager_SetWarningQuiet(SimpleLogManager_Handle handle, bool quiet);
AL2O3_EXTERN_C void SimpleLogManager_SetErrorQuiet(SimpleLogManager_Handle handle, bool quiet);
AL2O3_EXTERN_C void SimpleLogManager_SetDebugMsgQuiet(SimpleLogManager_Handle handle, bool quiet);
AL2O3_EXTERN_C void SimpleLogManager_SetFailedAssertQuiet(SimpleLogManager_Handle handle, bool quiet);
AL2O3_EXTERN_C bool SimpleLogManager_IsInfoQuiet(SimpleLogManager_Handle handle);
AL2O3_EXTERN_C bool SimpleLogManager_IsWarningQuiet(SimpleLogManager_Handle handle);
AL2O3_EXTERN_C bool SimpleLogManager_IsErrorQuiet(SimpleLogManager_Handle handle);
AL2O3_EXTERN_C bool SimpleLogManager_IsDebugMsgQuiet(SimpleLogManager_Handle handle);
AL2O3_EXTERN_C bool SimpleLogManager_IsFailedAssertQuiet(SimpleLogManager_Handle handle);

#endif //UTILS_SIMPLE_LOGMANAGER_LOGMANAGER_H